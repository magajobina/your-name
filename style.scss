:root {
  --mainbg: #9fffb9;
	--pixel-bg: #9fffb9;
	--pixel-border: black;
	--pixel-border-2: white;
	--pixel-border-3: var(--pixel-border);
	--pixel: .125rem;
  --color-red: #48b465;
  --color-white: #fff;
  --color-black-1: #111;
  --color-black-2: #222;
  --color-black-3: #444;
  --speed-normal: 0.5s;
  --speed-fast: 0.8s;
}
button {
  font-family: inherit;
  cursor: pointer;
  padding: 0;
  border: none;
}
body, html {
  font-family: 'Press Start 2P', monospace;
  overflow: hidden;
  box-sizing: border-box;
}
html {
  height: 100%;
  padding: 10px;
  background: #fff;
  margin: 0;
}
body {
  // background-color: #fff;
  background: url('../img/background.svg');
  background-size: 3%;
  background-color: var(--mainbg);
  // background-color: ;
  border-radius: 20px;
  display: block;
  height: 100%;
  margin: 0;
  transition: background 3s;
}
#myModal {
  display: flex;
  // display: none;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 100;
  transition: opacity 1s;
}
.smoothDiappear {
  opacity: 0;
}

#myModal2 {
  transition: opacity 2s;
  display: none;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 100;
}
.overlay {
  // display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  z-index: 99;
  transition: opacity 1s;
}
.overlay2 {
  display: none;
  // position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  z-index: 99;
}

#startButton {
  position: relative;
  width: 240px;
  height: 60px;
  margin: 20px;
  user-select: none;
  // border-radius: 50%;
  transform: scale(2);
  cursor: pointer;
  line-height: 60px;
  letter-spacing: 2px;
  text-decoration: none;
  text-transform: uppercase;
  text-align: center;
  background-color: #000;
  color: var(--color-white);
  transition: var(--speed-normal);
  border: 1px solid var(--color-red);
  font-family: 'Press Start 2P', monospace;
  &:hover {
    border: 1px solid transparent;
    background: var(--color-red) url('../img/pixel.png'); // 360px x 1080px
    transition-delay: 0.8s;
    background-size: 180px;
    animation: animate var(--speed-fast) steps(8) forwards;
  }
}
.pixel-border {
  // height: 100%;
  position: absolute;
  z-index: -1;
  top: 21px;
  bottom: 21px;
  left: 10px;
  right: 10px;
	background: #9fffb900;
	box-shadow:
	/* Inner Background Color */
		0 calc(var(--pixel) * -3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
		0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
		
	/* Pixel Border Layer 1 */
		calc(var(--pixel) * -1) 0 0 0 var(--pixel-border),
		var(--pixel) 0 0 0 var(--pixel-border),
		0 calc(var(--pixel) * -2) 0 0 var(--pixel-border),
		0 calc(var(--pixel) * 2) 0 0 var(--pixel-border),
		0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border),
		0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border),
		0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border),
		0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border),
		0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border),
		0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border),
		
	/* Pixel Border Layer 2 */
		calc(var(--pixel) * -2) 0 0 0 var(--pixel-border-2),
		calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2), 
		0 var(--pixel) 0 var(--pixel) var(--pixel-border-2),
		0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
		0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
		0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
		0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
		0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
		0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
		0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
		
	/* Border Layer 3: --pixel-border-3 */
		calc(var(--pixel) * -3) 0 0 0 var(--pixel-border-3),
		calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3),
		0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3),
		0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3),
		0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3),
		0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3),
		0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3), 
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3), 
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
		0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3), 
		0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3);
}
* {
  box-sizing: border-box;
}
.flex {
  display: flex;
  align-items: center;
  justify-content: center;
}
#h1 {
  font-size: min(3vw, 34px);
  display: inline-block;
  text-align: center;
  margin-top: 50px;
  user-select: none;
}
.input_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin-top: 30px;
  // position: relative;
}
.the_input_span {
  position: relative;
}
.the_input_fake_btn {
  position: absolute;
  top: -16px;
  right: -66px;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  cursor: pointer;
  // cursor: initial;

  
  img {
    max-width: 45px;
    transition: transform .4s;
    transform: rotate(-90deg);
    &.the_input_fake_btn--hover:hover {
      transition: all .4s;
      transform: scale(1.2) rotate(-90deg);
    }
  }
}
.gray {
  filter: grayscale(100%);
}
#the_input {
  outline: none;
  min-width: 460px;
  height: 50px;
  font-size: 14px;
  text-align: center;
  font-family: 'Press Start 2P', monospace;
  border: none;
  background: var(--mainbg);
  transition: background 3s, box-shadow 3s;
	box-shadow:
		
	/* Inner Background Color */
		0 calc(var(--pixel) * -3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
		0 calc(var(--pixel) * 3) 0 calc(var(--pixel) * -1) var(--pixel-bg),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -2) var(--pixel-bg),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -4) var(--pixel-bg),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -6) var(--pixel-bg),
		
	/* Pixel Border Layer 1 */
		calc(var(--pixel) * -1) 0 0 0 var(--pixel-border),
		var(--pixel) 0 0 0 var(--pixel-border),
		0 calc(var(--pixel) * -2) 0 0 var(--pixel-border),
		0 calc(var(--pixel) * 2) 0 0 var(--pixel-border),
		0 calc(var(--pixel) * -5) 0 calc(var(--pixel) * -1) var(--pixel-border),
		0 calc(var(--pixel) * 5) 0 calc(var(--pixel) * -1) var(--pixel-border),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -2) var(--pixel-border),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -2) var(--pixel-border),
		0 calc(var(--pixel) * -10) 0 calc(var(--pixel) * -4) var(--pixel-border),
		0 calc(var(--pixel) * 10) 0 calc(var(--pixel) * -4) var(--pixel-border),
		0 calc(var(--pixel) * -13) 0 calc(var(--pixel) * -6) var(--pixel-border),
		0 calc(var(--pixel) * 13) 0 calc(var(--pixel) * -6) var(--pixel-border),
		
	/* Pixel Border Layer 2 */
		calc(var(--pixel) * -2) 0 0 0 var(--pixel-border-2),
		calc(var(--pixel) * 2) 0 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * -1) 0 var(--pixel) var(--pixel-border-2), 
		0 var(--pixel) 0 var(--pixel) var(--pixel-border-2),
		0 calc(var(--pixel) * -4) 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * 4) 0 0 var(--pixel-border-2),
		0 calc(var(--pixel) * -6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
		0 calc(var(--pixel) * 6) 0 calc(var(--pixel) * -1) var(--pixel-border-2),
		0 calc(var(--pixel) * -8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
		0 calc(var(--pixel) * 8) 0 calc(var(--pixel) * -2) var(--pixel-border-2),
		0 calc(var(--pixel) * -11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
		0 calc(var(--pixel) * 11) 0 calc(var(--pixel) * -4) var(--pixel-border-2),
		0 calc(var(--pixel) * -14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
		0 calc(var(--pixel) * 14) 0 calc(var(--pixel) * -6) var(--pixel-border-2),
		
	/* Border Layer 3: --pixel-border-3 */
		calc(var(--pixel) * -3) 0 0 0 var(--pixel-border-3),
		calc(var(--pixel) * 3) 0 0 0 var(--pixel-border-3),
		0 0 0 calc(var(--pixel) * 2) var(--pixel-border-3),
		0 calc(var(--pixel) * -3) 0 var(--pixel) var(--pixel-border-3),
		0 calc(var(--pixel) * 3) 0 var(--pixel) var(--pixel-border-3),
		0 calc(var(--pixel) * -5) 0 0 var(--pixel-border-3),
		0 calc(var(--pixel) * 5) 0 0 var(--pixel-border-3),
		0 calc(var(--pixel) * -7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
		0 calc(var(--pixel) * 7) 0 calc(var(--pixel) * -1) var(--pixel-border-3),
		0 calc(var(--pixel) * -9) 0 calc(var(--pixel) * -2) var(--pixel-border-3), 
		0 calc(var(--pixel) * 9) 0 calc(var(--pixel) * -2) var(--pixel-border-3),
		0 calc(var(--pixel) * -12) 0 calc(var(--pixel) * -4) var(--pixel-border-3), 
		0 calc(var(--pixel) * 12) 0 calc(var(--pixel) * -4) var(--pixel-border-3),
		0 calc(var(--pixel) * -15) 0 calc(var(--pixel) * -6) var(--pixel-border-3), 
		0 calc(var(--pixel) * 15) 0 calc(var(--pixel) * -6) var(--pixel-border-3);
}
.message {
  display: inline;
  font-size: min(3vw, 18px);
  max-width: 700px;
  line-height: 25px;
  text-align: center;
  user-select: none;
}
#mimo {
}
#mimo2 {
  position: absolute;
  font-weight: 700;
  font-size: 40px;
  display: inline;
  display: none;
  user-select: none;
  z-index: 1;
}

#black-square {
  display: none;
  position: absolute;
  top: 48%;
  left: 49%;
  transform: translateX(-50%);
  margin: 0 auto;
  width: 500px;
  height: 300px;
  background: url("../img/davaismile.png") center center no-repeat;
  background-size: 75%;
  .black-square-inner {
    position: relative;
  }
  .black-square-child {
    display: block;
    position: absolute;
    font-size: 22px;
    font-weight: 500;
    top: 21px;
    right: 7%;
  }
}
.messagewrap {
  margin-top: 34px;
  max-width: 620px;
  text-align: center;
}
#cursor {
  display: none;
  // display: inline;
  user-select: none;
  animation: blink .6s step-end infinite;
  color: #000;
  font-size: 20px;
  margin-bottom: 2px; 
}
#barcode {
  display: none;
  position: absolute;
  bottom: 30%;
  left: 50%;
  transform: translateX(-50%);
}
#myModal2 {
  color: #000000;
  h1 {
    font-size: 4vw;
    line-height: 1.6;
    margin: 0;
  }
  h2 {
    font-size: 3vw;
    margin: 2vw 0;
  }
  #control, #progress {
    position: absolute;
    transform: translateX(-50%) translateY(-50%);
    text-align: center;
    user-select: none;
  }
  .title {
    user-select: none;
    transform: translateY(-50%);
    position: absolute;
    top: 50%;
    width: 100%;
    text-align: center;
    // left: 50%;
    font-size: 26px;
    color: #fff;
    
    .marsclass {
      visibility: hidden;
      font-size: 65px;
      margin: 0 15px;
      display: inline-block;
    }
  }
  .anim_pulse_selfmade {
    animation: pulse .429s .1s infinite;
  }
  #play {
    display: none;
  }
  #control {
    top: 90%;
    left: 50%;
    padding: 2rem;
    cursor: pointer;
    transition: color 0.3s ease;
  }
  #control:hover { color: #fa2; }

  @media only screen and (max-width: 32rem){
    h1 { font-size: 6vw; }
    h2 { font-size: 6vw; }
    span { font-size: 5vw; }
  }
}
.colorwhite {
  color: #fff;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  font-size: 22px;
}
.songtext_wrap {
  display: flex;
  margin: 100px 120px 0px;
  justify-content: space-between;
  &:first-child {
    margin: 200px 100px 0px;
  }
  &:nth-child(2) {
    margin: 100px 50px 0px;
  }
  &:nth-child(3) {
    margin: 100px 20px 0px;
  }
}
.modal_gachi_gifs {
  position: absolute;
  z-index: 1;
  display: none;

}
.modal_gachi_gifs1 {
  left: 5%;
  top: 40%;
  max-width: 19vw;
  animation: pulse4 .429s .1s linear infinite;
}
.modal_gachi_gifs2 {
  right: 50%;
  transform: translateX(50%);
  top: 9%;
  max-width: 24vw;
  animation: pulse2 .4s .1s infinite;
}
.modal_gachi_gifs3 {
  right: 6%;
  top: 30%;
  max-width: 19vw;
  animation: pulse3 .429s linear infinite;
}
.modal_gachi_gifs4 {
  right: 50%;
  transform: translateX(50%);
  bottom: 10%;
  max-width: 21vw;
    animation: pulse5 .429s linear infinite;
}

.modal2_songtext {
  visibility: hidden;
}
.playButtonImg {
  position: absolute;
  transform: translateX(-50%);
  max-width: 170px;
}
.playButtonImgWrapperDisplaynone {
  display: none;
}
#playButtonImgUnpressed {
  left: 50%;
  bottom: 30%;
  
}
#playButtonImgPressed {
  left: 49.95%;
  bottom: 30.85%;
  opacity: 0;
}
.container_for_sniper {
  position: relative;
  width: 300px;
  height: 300px;
  overflow: hidden;
}
.container_for_sniper img {
  opacity: 0;
  max-width: 200px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.outer_container_for_sniper {
  display: none;
  position: absolute;
}
.dotSniper {
  position: absolute;
  width: 8px;
  height: 8px;
  background-color: red;
  border-radius: 50%;
}
//=================================OMG=OMG=OMG=OMG=OMG=OMG=OMG=OMG========================================
//=================================OMG=OMG=OMG=OMG=OMG=OMG=OMG=OMG========================================
.mat_v_kanave {
  width: 50px;
  height: 50px;
  position: absolute;
  // display: flex;
  display: none;
  align-items: center;
  justify-content: center;
  top: 10%;
  left: 10%;
  background-color: red;
}
.omgimage {
}
.omg1 {
  animation: omg 2s infinite alternate;
}
.omg2div {
  position: absolute;
  top: 50%;
  right: 50%;
  transform: translateY(-50%);
  // display: none;
}
.omgdivsupport {
  transform-origin: right;
}
.omgdiv0 {
  transform: translate(0, 0);
  .omg2 {
    position: absolute;
    top: 50%;
    right: 50%;
    transform: translate(50%, -50%);
  }
  .omgimage {
    max-width: 12vw;
  }
}
.omgdiv1 {
  width: 9%;
  .omgdivsupport {
    animation: omg2 2s infinite linear;
    
  }
  .omgimage {
    max-width: 3vw;
    animation: omg2support 2s infinite linear;
  }
}
.omgdiv2 {
  width: 30%;
  .omgdivsupport {
    animation: omg2 8s infinite linear;
  }
  .omgimage {
    max-width: 8vw;
    animation: omg2support 8s infinite linear;
  }
}
.omgdiv3 {
  width: 16%;
  .omgdivsupport {
    animation: omg2 5s infinite linear;
  }
  .omgimage {
    max-width: 7vw;
    animation: omg2support 5s infinite linear;
  }
}
.omgdiv4 {
  width: 23%;
  .omgdivsupport {
    animation: omg2 7s infinite linear reverse;
  }
  .omgimage {
    max-width: 6vw;
    animation: omg2support 7s infinite linear reverse;
  }
}
.cornerimage {
  max-width: 9vw;
  position: absolute;
}
.cornerimage1 {
  top: 30px;
  left: 30px;
  animation: omg2support 7s infinite linear reverse;
}
.cornerimage2 {
  top: 30px;
  right: 30px;
  animation: omg2support 7s infinite linear;
}
.cornerimage3 {
  bottom: 30px;
  right: 30px;
  animation: omg2support 7s infinite linear reverse;
}
.cornerimage4 {
  bottom: 30px;
  left: 30px;
  animation: omg2support 7s infinite linear;
}
#omgEntireBlock1 {display: none;}
@keyframes omg2 {
  to { transform: rotate(1turn); }
}
@keyframes omg2support {
  to { transform: rotate(-1turn); }
}
@keyframes blink {
  from, to { opacity: 0; }
  50% { opacity: 1; }
}
@keyframes omg {
  0% {
    transform: translate(50%, 50%) scale(1);
    background-color: red;
  }
  10% {
    transform: translate(1000px, 200px) scale(3);
  }
  30% {
    transform: translate(500px, 330px) scale(4);
  }
  50% {
    transform: translate(500px, 500px) scale(2) rotate(180deg);
    background-color: blue;
    color: white;
  }
  60% {
    width: 1000px;
    font-size: 30px;
    transform: translate(500px, 500px) scale(2) rotate(1000deg);
    background-color: blue;
  }
  100% {
    transform: translate(50%, 50%) scale(1);
    background-color: red;
  }
}
@keyframes animate {
  0% {
    background-position-y: 0;
  }
  100% {
    background-position-y: -480px;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1) translateY(-50%);
  }
  50% {
    transform: scale(1.05) translateY(-50%);
  }
  100% {
    transform: scale(1) translateY(-50%); 
  }
}
@keyframes pulse2 {
  0% {
    transform: scale(1) translateX(50%);
  }
  50% {
    transform: scale(1.1) translateX(50%);
  }
  100% {
    transform: scale(1) translateX(50%); 
  }
}
@keyframes pulse3 {
  0% {
    transform: rotate(0deg) scale(1.1);
  }
  25% {
    transform: rotate(20deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-20deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
@keyframes pulse4 {
  0% {
    transform: rotate(0deg) scale(1.1);
  }
  25% {
    transform: rotate(8deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
@keyframes pulse5 {
  0% {
    transform: translateX(50%) scale(1.04) translateY(0px);
  }
  25% {
    transform: translateX(50%) translateY(30px);
  }
  50% {
    transform: translateX(50%) translateY(0px);
  }
  75% {
    transform: translateX(50%) translateY(-30px);
  }
  100% {
    transform: translateX(50%);
  }
}

@import 'history';
@import 'newAI'; 
@import 'bee'; 
@import 'clickr'; 